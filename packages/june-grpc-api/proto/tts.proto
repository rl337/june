syntax = "proto3";

package june.tts;

// Text-to-Speech Service
service TextToSpeech {
  // Streaming synthesis
  rpc SynthesizeStream(stream SynthesisRequest) returns (stream AudioChunk);
  
  // One-shot synthesis
  rpc Synthesize(SynthesisRequest) returns (AudioResponse);
  
  // Health check
  rpc HealthCheck(HealthRequest) returns (HealthResponse);
}

// Synthesis request
message SynthesisRequest {
  string text = 1;
  string voice_id = 2;
  string language = 3;  // ISO 639-1 code
  SynthesisConfig config = 4;
  bool stream = 5;  // Whether to stream audio chunks
}

// Synthesis configuration
message SynthesisConfig {
  float speed = 1;  // 0.5 to 2.0
  float pitch = 2;  // -0.5 to 0.5 semitones
  float energy = 3;  // 0.0 to 1.0
  string prosody = 4;  // "neutral", "happy", "sad", "angry", etc.
  bool enable_ssml = 5;  // Support SSML tags
}

// Audio chunk for streaming output
message AudioChunk {
  bytes audio_data = 1;
  int32 sample_rate = 2;
  int32 channels = 3;
  string encoding = 4;  // "pcm16", "opus", "mp3"
  bool is_final = 5;
  int64 timestamp_us = 6;
}

// Complete audio response
message AudioResponse {
  bytes audio_data = 1;
  int32 sample_rate = 2;
  string encoding = 3;
  int32 duration_ms = 4;
}

// Health check messages
message HealthRequest {}

message HealthResponse {
  bool healthy = 1;
  string version = 2;
  repeated string available_voices = 3;
}






